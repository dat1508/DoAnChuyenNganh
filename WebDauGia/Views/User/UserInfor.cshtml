@model WebDauGia.Models.USER

@{
    ViewBag.Title = "UserInfor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <h2>Thông tin tài khoản</h2>
    @using (Html.BeginForm("updateInfor", "User"))
    {
        @Html.AntiForgeryToken()
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdUser)
        @Html.HiddenFor(model => model.IdRank)
        @Html.HiddenFor(model => model.Username)
        <div class="row">
            <div class="col-md-4 mb-2">
                @Html.LabelFor(model => model.IdRank, "IdRank", htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.RANK.NameRank, new { htmlAttributes = new { @class = "form-control border border-dark ", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.IdRank, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 mb-2">
                @Html.LabelFor(model => model.Fullname, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Fullname, new { htmlAttributes = new { @class = "form-control border border-dark" } })
                @Html.ValidationMessageFor(model => model.Fullname, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 mb-2">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                <a href="@Url.Action("","")" style="margin-left:10px"><b>Đổi mật khẩu</b></a>
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control border border-dark", @type = "password", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-4 mb-2">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control border border-dark" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 mb-2">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control border border-dark" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 mb-2">
                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label" })
                <input type="date" class="form-control border border-dark" name="dateOfBirth" value="@Model.DateOfBirth.ToString("yyyy-MM-dd")">
                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-4 mb-2">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control border border-dark" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 mb-2">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                <div class="form-control border border-dark">
                    <select id="Gender" name="Gender" class="form-control">
                        @if (Model.Gender == true)
                        {
                            <option selected value="True">Nam</option>
                            <option value="False">Nữ</option>
                        }
                        else
                        {
                            <option value="True">Nam</option>
                            <option selected value="False">Nữ</option>
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row justify-content-center mb-2">
            <input type="submit" value="CẬP NHẬT THÔNG TIN" class="btn btn-info " />
        </div>
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var inputFields = document.querySelectorAll('.form-control');
        inputFields.forEach(function (value) {
            value.defaultValue = value.defaultValue.trim()
        })
    </script>
}

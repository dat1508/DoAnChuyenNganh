@using WebDauGia.Models
@model PRODUCT

@{
    ViewBag.Title = "Bid";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="#">Trang chủ</a></li>
                    <li aria-current="page" class="breadcrumb-item active">Tài sản đấu giá</li>
                </ol>
            </nav>
        </div>
        <div class="col-lg-12">
            <h1 class="text_Title_Detail">
                @Model.NameProduct
            </h1>
        </div>

        <div class="col-lg-12 order-1 order-lg-2">
            <div class="row">
                <div class="col-md-6">
                    <div data-slider-id="1" class="shop-detail-carousel owl-carousel ">
                        @foreach (var item in Model.IMG.ToList())
                        {
                            <div class="item"> <img src="@Url.Content(item.LinkImg)" alt="" class="img-fluid"></div>
                        }
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="countdown">
                                <div class="container-day">
                                    <h3 class="minute"></h3>
                                    <h3 class="text-minute"></h3>
                                </div>
                                <div class="container-day">
                                    <h3 class="second"></h3>
                                    <h3 class="text-second"></h3>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="product-infor-item"
                                 style="display:block;
                                        text-align:left;
                                        font-size:13.95px;
                                        box-shadow: rgb(0 0 0 / 10%) 0px 0px 25px;">
                                <div><i class="fas fa-tags mr-1"></i>Giá khởi điểm: @Model.StartPrice</div>
                                <div><i class="fas fa-money-bill-wave mr-1"></i>Bước giá: @Model.LowestBid</div>
                                <div><i class="fas fa-stopwatch mr-2"></i>Thời gian đặt giá: @(Model.BidTime/60) phút</div>
                                <div><i class="fas fa-user mr-2"></i>Số người tham gia: 50</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="product-infor-item">
                                Giá hiện tại:
                                <span class="spanColorAuctionproperty lastest-price">
                                </span>
                            </div>
                            <div class="product-infor-item">
                                Bước giá:
                                <span class="spanColorAuctionproperty">
                                    @Model.LowestBid
                                </span>
                            </div>
                            <div class="product-infor-item">Giá thấp nhất tiếp theo: 5</div>
                            <div class="product-infor-item mb-2" id="set_price">
                                <input class="minus is-form page-item page-link border-dark" type="button" value="-" style="display:inline-block">
                                <input class="input-qty border-dark" type="number" max="" min="0" step="@Model.LowestBid" style="display:inline-block; height:39.59px;">
                                <input class="plus is-form page-item page-link border-dark" type="button" value="+" style="display:inline-block">
                            </div>
                            <a id="datgia" class="btn btn-primary text-center w-75">ĐẶT GIÁ</a>
                            <div id="start-bid">@Model.StartBID.ToString("dd/MM/yyyy HH:mm:ss")</div>
                            <div id="end-bid">@Model.EndBID.ToString("dd/MM/yyyy HH:mm:ss")</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        let idProduct = @Model.IdProduct;
        let startPrice = @Model.StartPrice;
        let inputPrice = document.querySelector('input.input-qty');
        let stepPrice = @Model.LowestBid;
        let lastestPrice = '';
        let bidTime = @Model.BidTime;
        let now = new Date().getTime();


        $(document).ready(function () {
            setInterval(reloadPage, 1000);
            checkHistory();
            LoadDSData();
            checkRegister();
        });

        $('input.is-form').on('click', function () {
            if ($(this).val() == '+') {
                inputPrice.stepUp();
            } else {
                inputPrice.stepDown();
            }
        })

        $('#datgia').click(function () {
            $.ajax({
                method: 'POST',
                url: '@Url.Action("Bid", "Bid")',
                data: { idProduct: idProduct, price: inputPrice.value },
                success: function () {
                    location.reload(true);
                    loadHistory();
                },
                error: function () {
                    alert('Vui lòng nhập giá tiền')
                }
            })
        })

        function checkHistory() {
            $.ajax({
                method: 'POST',
                url: '@Url.Action("getLastestPrice", "Bid")',
                data: { idProduct: idProduct },
                success: function (data) {
                    if (data != 0) {
                        inputPrice.value = data;
                    } else {
                        inputPrice.value = startPrice;
                    }
                },
                error: function () {

                }
            })
        }

        function reloadPage() {
            getLastestPrice();
        }

        function getLastestPrice() {
            $.ajax({
                method: 'GET',
                url: '@Url.Action("getLastestPrice", "Bid")',
                data: { idProduct: idProduct},
                success: function (data) {
                    $('span.spanColorAuctionproperty.lastest-price').text(data)
                },
                error: function () {
                }
            })
        }



        function toMilisecond(id) {
            var parts = document.querySelector(`#${id}`).innerText;
            var dateArray = parts.split("/");
            var newDate = dateArray[1] + '/' + dateArray[0] + '/' + dateArray[2];
            var date = new Date(newDate);
            var milliseconds = date.getTime();
            return milliseconds;
        }

        var startBid = toMilisecond("start-bid");
        var endBid = toMilisecond("end-bid");
        var gap = endBid - startBid;

        function LoadDSData() {
            const countdown = () => {

                if (gap == 0) {
                    location.reload(true);
                }

                if (gap < 0) {
                    gap = 0;
                }

                const second = 1000;
                const minute = second * 60;
                const hour = minute * 60;
                const day = hour * 24;

                const textMinute = Math.floor((gap % hour) / minute);
                const textSecond = Math.floor((gap % minute) / second);

                document.querySelector(".minute").innerText = textMinute;
                document.querySelector(".second").innerText = textSecond;

                document.querySelector('.text-minute').innerText = "Phút";
                document.querySelector('.text-second').innerText = "Giây";
                gap -= 1000;

                $.ajax({
                    method: 'POST',
                    url: '@Url.Action("CountDownBidTime", "Bid")',
                    data: { idProduct: idProduct, time: (gap/1000)}
                })
            };
            setInterval(countdown, 1000);

        }

    </script>
}
